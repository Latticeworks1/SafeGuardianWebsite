class m{observer;animationConfig={duration:2e3,fps:60};constructor(){this.init()}init(){this.setupSmoothScrolling(),this.initializeIntersectionObserver(),this.setupContactForm(),this.observeElements()}setupSmoothScrolling(){document.querySelectorAll('a[href^="#"]').forEach(e=>{e.addEventListener("click",t=>{t.preventDefault(),document.querySelector(e.getAttribute("href"))?.scrollIntoView({behavior:"smooth"})})})}animateNumbers(){document.querySelectorAll(".number").forEach(t=>{if(t.animated)return;const n=t.innerText,o=parseFloat(n),r=n.includes("M"),s=n.includes("%");let i=0;const a=r?o/100:o/60;this.animationConfig.duration/(1e3/this.animationConfig.fps);const c=setInterval(()=>{if(i+=a,i>=o)t.innerText=n,t.animated=!0,clearInterval(c);else{const l=r?"M+":s?"%":"";t.innerText=i.toFixed(1)+l}},1e3/this.animationConfig.fps)})}initializeIntersectionObserver(){this.observer=new IntersectionObserver(e=>{e.forEach(t=>{t.isIntersecting&&(t.target.classList.add("animate"),t.target.classList.contains("metrics")&&this.animateNumbers())})},{threshold:.1})}observeElements(){document.querySelectorAll(".feature, .tech-card, .metric-card").forEach(e=>{this.observer.observe(e)})}setupContactForm(){const e=document.getElementById("contactForm");e&&e.addEventListener("submit",t=>{t.preventDefault(),this.handleFormSubmission()})}handleFormSubmission(){const e=document.getElementById("form-confirmation");if(!e)return;e.style.display="block",e.textContent="Thank you for your message! We will get back to you shortly.",document.getElementById("contactForm")?.reset(),setTimeout(()=>{e.style.display="none"},5e3)}}document.addEventListener("DOMContentLoaded",()=>{new m});
